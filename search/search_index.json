{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Overview \u00b6 The following macros are available in the SMILE - Smart SAS Macros - an Intuitive Library Extension. Macro Description smile_attr_var Function-style macro to return a variable attribute of a dataset. The following attributes are available: VARTYPE, VARLEN, VARLABEL, VARFMT and VARINFMT smile_attrc Function-style macro to return a character attribute of a dataset. The following attributes are available: CHARSET, COMPRESS, DATAREP, ENCODING, ENCRYPT, ENGINE, LABEL, LIB, MEM, MODE, MTYPE, SORTEDBY, SORTLVL, SORTSEQ, TYPE smile_attrn Function-style macro to return a numeric attribute of a dataset. The following attributes are available: ALTERPW, ANOBS, ANY, ARAND, ARWU, AUDIT, AUDIT_DATA, AUDIT_BEFORE, AUDIT_ERROR, CRDTE, ICONST, INDEX, ISINDEX, ISSUBSET, LRECL, LRID, MAXGEN, MAXRC, MODTE, NDEL, NEXTGEN, NLOBS, NLOBSF, NOBS, NVARS, PW, RADIX, READPW, REUSE, TAPE, WHSTMT, WRITEPW smile_ods_document_flat_label Flat navigation and optionally re-label navigation for ODS DOCUMENT. The navigation bookmark level is reduced to one level only. Optionally a label can be applied to all content items or the navigation label can be removed completely. smile_pdf_merge Merge multiple PDF files and create one bookmark entry per PDF file with PROC GROOVY and open-source Tool PDFBox smile_pdf_read_bookmarks Read PDF Bookmarks into a SAS dataset with the variables level, title and page smile_url_check Check existence of URL and store result in return code, information can optionally be printed to the log smile_url_download Downloads a file from an URL and store it locally on OUTFILE. Additionally return code can be stored and information can optionally be printed to the log. Macros \u00b6 smile_attr_var \u00b6 Key Description Name smile_attr_var Purpose Function-style macro to return a variable attribute of a dataset. The following attributes are available: VARTYPE, VARLEN, VARLABEL, VARFMT and VARINFMT SAS Version SAS 9.4 Author Katja Glass Date 2021-01-04 Reference Main programming parts are coming from attrv.sas macro from Roland Rashleigh-Berry who has published his code under the unlicence license in his utility package (http://www.datasavantconsulting.com/roland/Spectre/download.html) The following parameters are used: Parameter Description DATA name of the SAS dataset VAR name of variable ATTRIB SAS variable attrig keyword (e.g. VARTYPE, VARLEN, VARLABEL, VARFMT and VARINFMT) smile_attrc \u00b6 Key Description Name smile_attrc Purpose Function-style macro to return a character attribute of a dataset. The following attributes are available: CHARSET, COMPRESS, DATAREP, ENCODING, ENCRYPT, ENGINE, LABEL, LIB, MEM, MODE, MTYPE, SORTEDBY, SORTLVL, SORTSEQ, TYPE SAS Version SAS 9.4 Author Katja Glass Date 2021-01-04 Reference Main programming parts are coming from attrc.sas macro from Roland Rashleigh-Berry who has published his code under the unlicence license in his utility package (http://www.datasavantconsulting.com/roland/Spectre/download.html) The following parameters are used: Parameter Description DATA name of the SAS dataset ATTRIB SAS ATTRC keyword (e.g. TYPE, LIB, LABEL, SORTEDBY, ...) smile_attrn \u00b6 Key Description Name smile_attrn Purpose Function-style macro to return a numeric attribute of a dataset. The following attributes are available: ALTERPW, ANOBS, ANY, ARAND, ARWU, AUDIT, AUDIT_DATA, AUDIT_BEFORE, AUDIT_ERROR, CRDTE, ICONST, INDEX, ISINDEX, ISSUBSET, LRECL, LRID, MAXGEN, MAXRC, MODTE, NDEL, NEXTGEN, NLOBS, NLOBSF, NOBS, NVARS, PW, RADIX, READPW, REUSE, TAPE, WHSTMT, WRITEPW SAS Version SAS 9.4 Author Katja Glass Date 2021-01-04 Reference Main programming parts are coming from attrn.sas macro from Roland Rashleigh-Berry who has published his code under the unlicence license in his utility package (http://www.datasavantconsulting.com/roland/Spectre/download.html) The following parameters are used: Parameter Description DATA name of the SAS dataset ATTRIB SAS ATTRN keyword (e.g. NOBS, CRDTE, ...) smile_ods_document_flat_label \u00b6 Key Description Name smile_ods_document_flat_label Purpose Flat navigation and optionally re-label navigation for ODS DOCUMENT. The navigation bookmark level is reduced to one level only. Optionally a label can be applied to all content items or the navigation label can be removed completely. Comment The navigation in PDF documents can be one level only with this macro. CONTENTS=\"\" must be applied to the PROC REPORT as option and additionally for a BREAK BEFORE PAGE option. Issues The table of contents created per default by SAS (ODS PDF option TOC) is not linking the pages correctly when using BY groups and having one ODS DOCUMENT with multiple outputs, using single ODS DOCUMENTS (one per each output) then this is working correctly. In such a case, do use not a TOC or create an own TOC, e.g. like described here: https://www.mwsug.org/proceedings/2012/S1/MWSUG-2012-S125.pdf SAS Version SAS 9.4 Author Katja Glass Date 2021-01-18 Example Program ../programs/test_smile_ods_document_flat_label.sas Reference A nice overview of ODS DOCUMENT can be found here: https://support.sas.com/resources/papers/proceedings12/273-2012.pdf The following parameters are used: Parameter Description DOCUMENT ODS Document itemstore LABEL One label to apply on first element, all other labels are removed (optional), if not provided, labels are just rearranged and additional BY-labels removed BOOKMARKLABEL Indicator whether to use Bookmark Labels if none is specified (YES Default), if LABEL is missing and BOOKMARKLABEL = NO, all labels are removed smile_pdf_merge \u00b6 Key Description Name smile_pdf_merge Purpose Merge multiple PDF files and create one bookmark entry per PDF file with PROC GROOVY and open-source Tool PDFBox Comment Make sure to download PDFBOX, e.g. from here https://pdfbox.apache.org/download.html - the full \"app\" version Issues \"unable to resolve class\" messages mean the PDFBOX is not provided correctly. \"ERROR: PROCEDURE GROOVY cannot be used when SAS is in the lockdown state.\" means that your SAS environment does not support PROC GROOVY, for this the macro cannot run the groovy code. \"WARNUNG: Removed /IDTree from /Names dictionary, doesn't belong there\" - this message is coming from PDFBox. SAS Version SAS 9.4 Author Katja Glass Date 2021-01-29 Example Program ../programs/test_smile_pdf_merge.sas Reference A paper explaining how to use PDFBOX with PROC GROOVY also for TOC is available in the following paper (https://www.lexjansen.com/phuse/2019/ct/CT05.pdf) The following parameters are used: Parameter Description DATA Input dataset containing INFILE and BOOKMARK variable, INFILE containing single pdf files (one file per observation), BOOKMARK contaiing the corresponding bookmark label for this file OUTFILE Output PDF file (not in quotes) PDFBOX_JAR_PATH Path and jar file name for PDFBOX open source tool, e.g. &path/pdfbox-app-2.0.22.jar SOURCEFILE Optional sas program file where PROC GROOVY code is stored, default is TEMP (only temporary) RUN_GROOVY NO/YES indicator whether to run the final GROOVY code (default YES) smile_pdf_read_bookmarks \u00b6 Key Description Name smile_pdf_read_bookmarks Purpose Read PDF Bookmarks into a SAS dataset with the variables level, title and page Comment Make sure to download PDFBOX, e.g. from here https://pdfbox.apache.org/download.html - the full \"app\" version Issues \"unable to resolve class\" messages mean the PDFBOX is not provided correctly. \"ERROR: PROCEDURE GROOVY cannot be used when SAS is in the lockdown state.\" means that your SAS environment does not support PROC GROOVY, for this the macro cannot run the groovy code. SAS Version SAS 9.4 Author Katja Glass Date 2021-02-13 Example Program ../programs/test_smile_pdf_read_bookmarks.sas Reference PDFBox contains a lot of useful functionalities (https://pdfbox.apache.org) The following parameters are used: Parameter Description PDFFILE name of PDF file with bookmarks OUTDAT output dataset PDFBOX_JAR path and jar file name for PDFBOX open source tool, e.g. &path/pdfbox-app-2.0.22.jar smile_url_check \u00b6 Key Description Name smile_url_check Purpose Check existence of URL and store result in return code, information can optionally be printed to the log Comment Return codes are 0 - url found, 999 - no url provided, 998 - url not provided in quotes, otherwise html-return code (e.g. 404 file not found) SAS Version SAS 9.4 Author Katja Glass Date 2021-01-04 Reference The idea from this macro is coming from a paper by Joseph Henry - The ABCs of PROC HTTP (https://www.sas.com/content/dam/SAS/support/en/sas-global-forum-proceedings/2019/3232-2019.pdf) The following parameters are used: Parameter Description URL http(s) URL which should be checked in quotes RETURN return code variable (scope should be global) INFO NO/YES indicator to print information to the log smile_url_download \u00b6 Key Description Name smile_url_download Purpose Downloads a file from an URL and store it locally on OUTFILE. Additionally return code can be stored and information can optionally be printed to the log. Comment Return codes are 0 - URL found, 999 - no URL or OUTFILE provided, 998 - URL or OUTFILE not provided in quotes, otherwise html-return code (e.g. 404 file not found) SAS Version SAS 9.4 Author Katja Glass Date 2021-01-04 Reference The idea from this macro is coming from a paper by Joseph Henry - The ABCs of PROC HTTP (https://www.sas.com/content/dam/SAS/support/en/sas-global-forum-proceedings/2019/3232-2019.pdf) The following parameters are used: Parameter Description URL http(s) URL which should be checked in quotes OUTFILE output file provided in quotes RETURN return code variable (scope should be global) INFO NO/YES indicator to print information to the log","title":"Overview"},{"location":"#overview","text":"The following macros are available in the SMILE - Smart SAS Macros - an Intuitive Library Extension. Macro Description smile_attr_var Function-style macro to return a variable attribute of a dataset. The following attributes are available: VARTYPE, VARLEN, VARLABEL, VARFMT and VARINFMT smile_attrc Function-style macro to return a character attribute of a dataset. The following attributes are available: CHARSET, COMPRESS, DATAREP, ENCODING, ENCRYPT, ENGINE, LABEL, LIB, MEM, MODE, MTYPE, SORTEDBY, SORTLVL, SORTSEQ, TYPE smile_attrn Function-style macro to return a numeric attribute of a dataset. The following attributes are available: ALTERPW, ANOBS, ANY, ARAND, ARWU, AUDIT, AUDIT_DATA, AUDIT_BEFORE, AUDIT_ERROR, CRDTE, ICONST, INDEX, ISINDEX, ISSUBSET, LRECL, LRID, MAXGEN, MAXRC, MODTE, NDEL, NEXTGEN, NLOBS, NLOBSF, NOBS, NVARS, PW, RADIX, READPW, REUSE, TAPE, WHSTMT, WRITEPW smile_ods_document_flat_label Flat navigation and optionally re-label navigation for ODS DOCUMENT. The navigation bookmark level is reduced to one level only. Optionally a label can be applied to all content items or the navigation label can be removed completely. smile_pdf_merge Merge multiple PDF files and create one bookmark entry per PDF file with PROC GROOVY and open-source Tool PDFBox smile_pdf_read_bookmarks Read PDF Bookmarks into a SAS dataset with the variables level, title and page smile_url_check Check existence of URL and store result in return code, information can optionally be printed to the log smile_url_download Downloads a file from an URL and store it locally on OUTFILE. Additionally return code can be stored and information can optionally be printed to the log.","title":"Overview"},{"location":"#macros","text":"","title":"Macros"},{"location":"#smile_attr_var","text":"Key Description Name smile_attr_var Purpose Function-style macro to return a variable attribute of a dataset. The following attributes are available: VARTYPE, VARLEN, VARLABEL, VARFMT and VARINFMT SAS Version SAS 9.4 Author Katja Glass Date 2021-01-04 Reference Main programming parts are coming from attrv.sas macro from Roland Rashleigh-Berry who has published his code under the unlicence license in his utility package (http://www.datasavantconsulting.com/roland/Spectre/download.html) The following parameters are used: Parameter Description DATA name of the SAS dataset VAR name of variable ATTRIB SAS variable attrig keyword (e.g. VARTYPE, VARLEN, VARLABEL, VARFMT and VARINFMT)","title":"smile_attr_var"},{"location":"#smile_attrc","text":"Key Description Name smile_attrc Purpose Function-style macro to return a character attribute of a dataset. The following attributes are available: CHARSET, COMPRESS, DATAREP, ENCODING, ENCRYPT, ENGINE, LABEL, LIB, MEM, MODE, MTYPE, SORTEDBY, SORTLVL, SORTSEQ, TYPE SAS Version SAS 9.4 Author Katja Glass Date 2021-01-04 Reference Main programming parts are coming from attrc.sas macro from Roland Rashleigh-Berry who has published his code under the unlicence license in his utility package (http://www.datasavantconsulting.com/roland/Spectre/download.html) The following parameters are used: Parameter Description DATA name of the SAS dataset ATTRIB SAS ATTRC keyword (e.g. TYPE, LIB, LABEL, SORTEDBY, ...)","title":"smile_attrc"},{"location":"#smile_attrn","text":"Key Description Name smile_attrn Purpose Function-style macro to return a numeric attribute of a dataset. The following attributes are available: ALTERPW, ANOBS, ANY, ARAND, ARWU, AUDIT, AUDIT_DATA, AUDIT_BEFORE, AUDIT_ERROR, CRDTE, ICONST, INDEX, ISINDEX, ISSUBSET, LRECL, LRID, MAXGEN, MAXRC, MODTE, NDEL, NEXTGEN, NLOBS, NLOBSF, NOBS, NVARS, PW, RADIX, READPW, REUSE, TAPE, WHSTMT, WRITEPW SAS Version SAS 9.4 Author Katja Glass Date 2021-01-04 Reference Main programming parts are coming from attrn.sas macro from Roland Rashleigh-Berry who has published his code under the unlicence license in his utility package (http://www.datasavantconsulting.com/roland/Spectre/download.html) The following parameters are used: Parameter Description DATA name of the SAS dataset ATTRIB SAS ATTRN keyword (e.g. NOBS, CRDTE, ...)","title":"smile_attrn"},{"location":"#smile_ods_document_flat_label","text":"Key Description Name smile_ods_document_flat_label Purpose Flat navigation and optionally re-label navigation for ODS DOCUMENT. The navigation bookmark level is reduced to one level only. Optionally a label can be applied to all content items or the navigation label can be removed completely. Comment The navigation in PDF documents can be one level only with this macro. CONTENTS=\"\" must be applied to the PROC REPORT as option and additionally for a BREAK BEFORE PAGE option. Issues The table of contents created per default by SAS (ODS PDF option TOC) is not linking the pages correctly when using BY groups and having one ODS DOCUMENT with multiple outputs, using single ODS DOCUMENTS (one per each output) then this is working correctly. In such a case, do use not a TOC or create an own TOC, e.g. like described here: https://www.mwsug.org/proceedings/2012/S1/MWSUG-2012-S125.pdf SAS Version SAS 9.4 Author Katja Glass Date 2021-01-18 Example Program ../programs/test_smile_ods_document_flat_label.sas Reference A nice overview of ODS DOCUMENT can be found here: https://support.sas.com/resources/papers/proceedings12/273-2012.pdf The following parameters are used: Parameter Description DOCUMENT ODS Document itemstore LABEL One label to apply on first element, all other labels are removed (optional), if not provided, labels are just rearranged and additional BY-labels removed BOOKMARKLABEL Indicator whether to use Bookmark Labels if none is specified (YES Default), if LABEL is missing and BOOKMARKLABEL = NO, all labels are removed","title":"smile_ods_document_flat_label"},{"location":"#smile_pdf_merge","text":"Key Description Name smile_pdf_merge Purpose Merge multiple PDF files and create one bookmark entry per PDF file with PROC GROOVY and open-source Tool PDFBox Comment Make sure to download PDFBOX, e.g. from here https://pdfbox.apache.org/download.html - the full \"app\" version Issues \"unable to resolve class\" messages mean the PDFBOX is not provided correctly. \"ERROR: PROCEDURE GROOVY cannot be used when SAS is in the lockdown state.\" means that your SAS environment does not support PROC GROOVY, for this the macro cannot run the groovy code. \"WARNUNG: Removed /IDTree from /Names dictionary, doesn't belong there\" - this message is coming from PDFBox. SAS Version SAS 9.4 Author Katja Glass Date 2021-01-29 Example Program ../programs/test_smile_pdf_merge.sas Reference A paper explaining how to use PDFBOX with PROC GROOVY also for TOC is available in the following paper (https://www.lexjansen.com/phuse/2019/ct/CT05.pdf) The following parameters are used: Parameter Description DATA Input dataset containing INFILE and BOOKMARK variable, INFILE containing single pdf files (one file per observation), BOOKMARK contaiing the corresponding bookmark label for this file OUTFILE Output PDF file (not in quotes) PDFBOX_JAR_PATH Path and jar file name for PDFBOX open source tool, e.g. &path/pdfbox-app-2.0.22.jar SOURCEFILE Optional sas program file where PROC GROOVY code is stored, default is TEMP (only temporary) RUN_GROOVY NO/YES indicator whether to run the final GROOVY code (default YES)","title":"smile_pdf_merge"},{"location":"#smile_pdf_read_bookmarks","text":"Key Description Name smile_pdf_read_bookmarks Purpose Read PDF Bookmarks into a SAS dataset with the variables level, title and page Comment Make sure to download PDFBOX, e.g. from here https://pdfbox.apache.org/download.html - the full \"app\" version Issues \"unable to resolve class\" messages mean the PDFBOX is not provided correctly. \"ERROR: PROCEDURE GROOVY cannot be used when SAS is in the lockdown state.\" means that your SAS environment does not support PROC GROOVY, for this the macro cannot run the groovy code. SAS Version SAS 9.4 Author Katja Glass Date 2021-02-13 Example Program ../programs/test_smile_pdf_read_bookmarks.sas Reference PDFBox contains a lot of useful functionalities (https://pdfbox.apache.org) The following parameters are used: Parameter Description PDFFILE name of PDF file with bookmarks OUTDAT output dataset PDFBOX_JAR path and jar file name for PDFBOX open source tool, e.g. &path/pdfbox-app-2.0.22.jar","title":"smile_pdf_read_bookmarks"},{"location":"#smile_url_check","text":"Key Description Name smile_url_check Purpose Check existence of URL and store result in return code, information can optionally be printed to the log Comment Return codes are 0 - url found, 999 - no url provided, 998 - url not provided in quotes, otherwise html-return code (e.g. 404 file not found) SAS Version SAS 9.4 Author Katja Glass Date 2021-01-04 Reference The idea from this macro is coming from a paper by Joseph Henry - The ABCs of PROC HTTP (https://www.sas.com/content/dam/SAS/support/en/sas-global-forum-proceedings/2019/3232-2019.pdf) The following parameters are used: Parameter Description URL http(s) URL which should be checked in quotes RETURN return code variable (scope should be global) INFO NO/YES indicator to print information to the log","title":"smile_url_check"},{"location":"#smile_url_download","text":"Key Description Name smile_url_download Purpose Downloads a file from an URL and store it locally on OUTFILE. Additionally return code can be stored and information can optionally be printed to the log. Comment Return codes are 0 - URL found, 999 - no URL or OUTFILE provided, 998 - URL or OUTFILE not provided in quotes, otherwise html-return code (e.g. 404 file not found) SAS Version SAS 9.4 Author Katja Glass Date 2021-01-04 Reference The idea from this macro is coming from a paper by Joseph Henry - The ABCs of PROC HTTP (https://www.sas.com/content/dam/SAS/support/en/sas-global-forum-proceedings/2019/3232-2019.pdf) The following parameters are used: Parameter Description URL http(s) URL which should be checked in quotes OUTFILE output file provided in quotes RETURN return code variable (scope should be global) INFO NO/YES indicator to print information to the log","title":"smile_url_download"},{"location":"test_smile_attr_var/","text":"TEST_SMILE_ATTR_VAR \u00b6 Example program for macro calls of %smile_attr_var Author : Katja Glass Creation : 2021-02-15 SAS Version: SAS 9.4 License : MIT initialize macros %LET root = /folders/myshortcuts/git/SMILE-SmartSASMacros; OPTIONS SASAUTOS=(SASAUTOS, \" &root /macros\" ); Example 1 - simple examples \u00b6 %PUT VARTYPE for name: %smile_attr_var (sashelp . class, name, vartype); %PUT VARTYPE for age: %smile_attr_var (sashelp . class, age, vartype); %PUT VARLABEL for name: %smile_attr_var (sashelp . class, name, varlabel); %PUT VARLEN for name: %smile_attr_var (sashelp . class, name, varlen); Log Output: VARTYPE for name: C VARTYPE for age: N VARLABEL for name: VARLEN for name: 8 Example 2 - error case examples \u00b6 %PUT data does not exist: %smile_attr_var (dummy, name, varlen); %PUT variable does not exist: %smile_attr_var (sashelp . class, dummy, varlen); %PUT invalid attribute: %smile_attr_var (sashelp . class, name, dummy); Log Output: ERROR: SMILE_ATTR_VAR - DATA (dummy) does not exist. data does not exist: -1 ERROR: SMILE_ATTR_VAR - Variable VAR (dummy) does not exist in DATA (sashelp.class). variable does not exist: -1 ERROR: SMILE_ATTR_VAR - Invalid value for ATTRIB (dummy) - only the following are supported: SMILE_ATTR_VAR - VARTYPE, VARLEN, VARLABEL, VARFMT and VARINFMT invalid attribute: -1","title":"smile_attr_var"},{"location":"test_smile_attr_var/#test_smile_attr_var","text":"Example program for macro calls of %smile_attr_var Author : Katja Glass Creation : 2021-02-15 SAS Version: SAS 9.4 License : MIT initialize macros %LET root = /folders/myshortcuts/git/SMILE-SmartSASMacros; OPTIONS SASAUTOS=(SASAUTOS, \" &root /macros\" );","title":"TEST_SMILE_ATTR_VAR"},{"location":"test_smile_attr_var/#example-1-simple-examples","text":"%PUT VARTYPE for name: %smile_attr_var (sashelp . class, name, vartype); %PUT VARTYPE for age: %smile_attr_var (sashelp . class, age, vartype); %PUT VARLABEL for name: %smile_attr_var (sashelp . class, name, varlabel); %PUT VARLEN for name: %smile_attr_var (sashelp . class, name, varlen); Log Output: VARTYPE for name: C VARTYPE for age: N VARLABEL for name: VARLEN for name: 8","title":"Example 1 - simple examples"},{"location":"test_smile_attr_var/#example-2-error-case-examples","text":"%PUT data does not exist: %smile_attr_var (dummy, name, varlen); %PUT variable does not exist: %smile_attr_var (sashelp . class, dummy, varlen); %PUT invalid attribute: %smile_attr_var (sashelp . class, name, dummy); Log Output: ERROR: SMILE_ATTR_VAR - DATA (dummy) does not exist. data does not exist: -1 ERROR: SMILE_ATTR_VAR - Variable VAR (dummy) does not exist in DATA (sashelp.class). variable does not exist: -1 ERROR: SMILE_ATTR_VAR - Invalid value for ATTRIB (dummy) - only the following are supported: SMILE_ATTR_VAR - VARTYPE, VARLEN, VARLABEL, VARFMT and VARINFMT invalid attribute: -1","title":"Example 2 - error case examples"},{"location":"test_smile_attrc/","text":"TEST_SMILE_ATTRC \u00b6 Example program for macro calls of %smile_attrc Author : Katja Glass Creation : 2021-02-15 SAS Version: SAS 9.4 License : MIT initialize macros %LET root = /folders/myshortcuts/git/SMILE-SmartSASMacros; OPTIONS SASAUTOS=(SASAUTOS, \" &root /macros\" ); Example 1 - simple examples \u00b6 Create test data DATA class( LABEL = \"SASHELP Example Dataset\" ); SET sashelp . class ; RUN; PROC SORT DATA=class; BY sex ; RUN; Call macros %PUT Class label : %smile_attrc (class, label ); %PUT Class sort vars: %smile_attrc (class, sortedby); %PUT Class library: %smile_attrc (sashelp . class, lib); %PUT Class encoding: %smile_attrc (sashelp . class, encoding); Log Output: Class label: SASHELP Example Dataset Class sort vars: Sex Class library: SASHELP Class encoding: us-ascii ASCII (ANSI) Example 2 - error case examples \u00b6 %PUT invalid data: %smile_attrc (sashelp . class2, nobs); %PUT invalid attribute: %smile_attrc (sashelp . class, dummy); Log Output: ERROR: SMILE_ATTRC - Invalid value for ATTRIB (nobs). invalid data: -1 ERROR: SMILE_ATTRC - Invalid value for ATTRIB (dummy). invalid attribute: -1","title":"smile_attrc"},{"location":"test_smile_attrc/#test_smile_attrc","text":"Example program for macro calls of %smile_attrc Author : Katja Glass Creation : 2021-02-15 SAS Version: SAS 9.4 License : MIT initialize macros %LET root = /folders/myshortcuts/git/SMILE-SmartSASMacros; OPTIONS SASAUTOS=(SASAUTOS, \" &root /macros\" );","title":"TEST_SMILE_ATTRC"},{"location":"test_smile_attrc/#example-1-simple-examples","text":"Create test data DATA class( LABEL = \"SASHELP Example Dataset\" ); SET sashelp . class ; RUN; PROC SORT DATA=class; BY sex ; RUN; Call macros %PUT Class label : %smile_attrc (class, label ); %PUT Class sort vars: %smile_attrc (class, sortedby); %PUT Class library: %smile_attrc (sashelp . class, lib); %PUT Class encoding: %smile_attrc (sashelp . class, encoding); Log Output: Class label: SASHELP Example Dataset Class sort vars: Sex Class library: SASHELP Class encoding: us-ascii ASCII (ANSI)","title":"Example 1 - simple examples"},{"location":"test_smile_attrc/#example-2-error-case-examples","text":"%PUT invalid data: %smile_attrc (sashelp . class2, nobs); %PUT invalid attribute: %smile_attrc (sashelp . class, dummy); Log Output: ERROR: SMILE_ATTRC - Invalid value for ATTRIB (nobs). invalid data: -1 ERROR: SMILE_ATTRC - Invalid value for ATTRIB (dummy). invalid attribute: -1","title":"Example 2 - error case examples"},{"location":"test_smile_attrn/","text":"TEST_SMILE_ATTRN \u00b6 Example program for macro calls of %smile_attrn Author : Katja Glass Creation : 2021-02-15 SAS Version: SAS 9.4 License : MIT initialize macros %LET root = /folders/myshortcuts/git/SMILE-SmartSASMacros; OPTIONS SASAUTOS=(SASAUTOS, \" &root /macros\" ); Example 1 - simple examples \u00b6 %PUT Class NOBS( 1 ): %smile_attrn (sashelp . class, nobs); %PUT Class NOBS( 2 ): %smile_attrn (sashelp . class( WHERE =(age= 16 )), nobs); %PUT Class NLOBS: %smile_attrn (sashelp . class( WHERE =(age= 16 )), nlobs); %PUT Class NLOBSF: %smile_attrn (sashelp . class( WHERE =(age= 16 )), nlobsf); %PUT Class ANOBS( 1 ): %smile_attrn (sashelp . class, ANOBS); %PUT Class ANOBS( 2 ): %smile_attrn (sashelp . class( WHERE =(age= 1 )), ANOBS); %PUT Class NVARS: %smile_attrn (sashelp . class, NVARS); Log Output: Class NOBS(1): 19 Class NOBS(2): 19 Class NLOBS: 19 Class NLOBSF: -1 Class ANOBS(1): 1 Class ANOBS(2): 1 Class NVARS: 5 Example 2 - error case examples \u00b6 %PUT invalid data: %smile_attrn (sashelp . class2, nobs); %PUT invalid attribute: %smile_attrn (sashelp . class, dummy); Log Output: ERROR: SMILE_ATTRN - DATA (sashelp.class2) does not exist. invalid data: -1 ERROR: SMILE_ATTRN - Invalid value for ATTRIB (dummy). invalid attribute: -1","title":"smile_attrn"},{"location":"test_smile_attrn/#test_smile_attrn","text":"Example program for macro calls of %smile_attrn Author : Katja Glass Creation : 2021-02-15 SAS Version: SAS 9.4 License : MIT initialize macros %LET root = /folders/myshortcuts/git/SMILE-SmartSASMacros; OPTIONS SASAUTOS=(SASAUTOS, \" &root /macros\" );","title":"TEST_SMILE_ATTRN"},{"location":"test_smile_attrn/#example-1-simple-examples","text":"%PUT Class NOBS( 1 ): %smile_attrn (sashelp . class, nobs); %PUT Class NOBS( 2 ): %smile_attrn (sashelp . class( WHERE =(age= 16 )), nobs); %PUT Class NLOBS: %smile_attrn (sashelp . class( WHERE =(age= 16 )), nlobs); %PUT Class NLOBSF: %smile_attrn (sashelp . class( WHERE =(age= 16 )), nlobsf); %PUT Class ANOBS( 1 ): %smile_attrn (sashelp . class, ANOBS); %PUT Class ANOBS( 2 ): %smile_attrn (sashelp . class( WHERE =(age= 1 )), ANOBS); %PUT Class NVARS: %smile_attrn (sashelp . class, NVARS); Log Output: Class NOBS(1): 19 Class NOBS(2): 19 Class NLOBS: 19 Class NLOBSF: -1 Class ANOBS(1): 1 Class ANOBS(2): 1 Class NVARS: 5","title":"Example 1 - simple examples"},{"location":"test_smile_attrn/#example-2-error-case-examples","text":"%PUT invalid data: %smile_attrn (sashelp . class2, nobs); %PUT invalid attribute: %smile_attrn (sashelp . class, dummy); Log Output: ERROR: SMILE_ATTRN - DATA (sashelp.class2) does not exist. invalid data: -1 ERROR: SMILE_ATTRN - Invalid value for ATTRIB (dummy). invalid attribute: -1","title":"Example 2 - error case examples"},{"location":"test_smile_ods_document_flat_label/","text":"TEST_SMILE_ODS_DOCUMENT_FLAT_LABEL \u00b6 Example program for macro calls of %smile_ods_document_flat_label Author : Katja Glass Creation : 2021-01-18 SAS Version: SAS 9.4 License : MIT initialize macros %LET root = /folders/myshortcuts/git/SMILE-SmartSASMacros; OPTIONS SASAUTOS=(SASAUTOS, \" &root /macros\" ); set options for nice layout OPTIONS NODATE NONUMBER NOCENTER ORIENTATION=landscape; TITLE ; FOOTNOTE ; OPTIONS PS= 35 ; Example 1 - empty ODS Document - warning expected \u00b6 ODS DOCUMENT NAME = work . doc_empty (write); ODS DOCUMENT CLOSE; %smile_ods_document_flat_label (document=doc_empty); %PUT The warning message is expected; Log Output: WARNING: SMILE_ODS_DOCUMENT_FLAT_LABEL - DOCUMENT (doc_empty) does not contain any observations - no action done The warning message is expected Example 2 - not existing ODS Document - error expected \u00b6 %smile_ods_document_flat_label (document=doc_notexist); %PUT The error message is expected; Log Output: ERROR: SMILE_ODS_DOCUMENT_FLAT_LABEL - DOCUMENT (doc_notexist) is no existing ODS DOCUMENT. Macro will abort The error message is expected Example 3 - create flat navigation PDF using one ODS DOCUMENT \u00b6 comment: - the SAS TOC would be created a buggy linking (e.g. click \"table 2\" on TOC) - this had been reported to SAS(R)- it seems to be depending on viewer and whether the PDF is maximized or not - I am expecting no fix from SAS(R) include program to create one ODS document containing many reports %INCLUDE \" &root /programs/example_ods_document_many_reports.sas\" ; create direct output without any modifications ODS PDF FILE = \" &root /results/ods_document_noflat1.pdf\" nocontents ; PROC DOCUMENT name=doc_results; replay ; QUIT; ODS PDF CLOSE; Navigation contains two levels, e.g. BYLINE categories update the document to flatten labels %smile_ods_document_flat_label (document=doc_results); ODS Document is arranged flat Create PDF out of modified ODS Document ODS PDF FILE = \" &root /results/ods_document_flat1.pdf\" nocontents ; PROC DOCUMENT name=doc_results; replay ; QUIT; ODS PDF CLOSE; Navigation contains one level The following source can be used to see the structure of the ODS DOCUMENT ODS LISTING ; PROC DOCUMENT NAME=doc_results(READ); LIST / levels=all details ; RUN; ODS _ALL_ CLOSE; Example 4 - create flat navigation PDF using multiple ODS DOCUMENT - with re-labeling \u00b6 comment: - a looping macro might be feasible for generic use - the SAS TOC is created and linking correctly - ODS PROCLABEL is ignored as the label is coming through the re-labeling include program to create one multiple ODS documents - one per report %INCLUDE \" &root /programs/example_ods_document_single_reports.sas\" ; flat ODS Document structure per document, apply a specific label %smile_ods_document_flat_label (document=doc_res1, label = Table 1 ); %smile_ods_document_flat_label (document=doc_res2, label = Table 2 ); %smile_ods_document_flat_label (document=doc_res3, label = Table 3 ); %smile_ods_document_flat_label (document=doc_res4, label = Table 4 ); %smile_ods_document_flat_label (document=doc_res5, label = Table 5 ); %smile_ods_document_flat_label (document=doc_res6, label = Table 6 ); %smile_ods_document_flat_label (document=doc_res_f1, label =Figure 1 ); ODS Documents are flat now using a short label Create final PDF file ODS PDF FILE = \" &root /results/ods_document_flat2.pdf\" CONTENTS ; PROC DOCUMENT name=doc_res1; replay ; QUIT; PROC DOCUMENT name=doc_res2; replay ; QUIT; PROC DOCUMENT name=doc_res3; replay ; QUIT; PROC DOCUMENT name=doc_res4; replay ; QUIT; PROC DOCUMENT name=doc_res5; replay ; QUIT; PROC DOCUMENT name=doc_res6; replay ; QUIT; PROC DOCUMENT name=doc_res_f1; replay ; QUIT; ODS PDF CLOSE; Navigation and TOC contains one level with short bookmark labels, tables contain still full label Bookmarks and TOC First Table Example 5 - create flat navigation PDF using multiple ODS DOCUMENT \u00b6 comment: - a looping macro might be feasible for generic use - the SAS TOC is created and linking correctly include program to create one multiple ODS documents - one per report %INCLUDE \" &root /programs/example_ods_document_single_reports.sas\" ; flat ODS Document structure per document, apply a specific label %smile_ods_document_flat_label (document=doc_res1); %smile_ods_document_flat_label (document=doc_res2); %smile_ods_document_flat_label (document=doc_res3); %smile_ods_document_flat_label (document=doc_res4); %smile_ods_document_flat_label (document=doc_res5); %smile_ods_document_flat_label (document=doc_res6); %smile_ods_document_flat_label (document=doc_res_f1); ODS Documents are flat now using the original TITLE label Create final PDF file ODS PDF FILE = \" &root /results/ods_document_flat3.pdf\" CONTENTS ; PROC DOCUMENT name=doc_res1; replay ; QUIT; PROC DOCUMENT name=doc_res2; replay ; QUIT; PROC DOCUMENT name=doc_res3; replay ; QUIT; PROC DOCUMENT name=doc_res4; replay ; QUIT; PROC DOCUMENT name=doc_res5; replay ; QUIT; PROC DOCUMENT name=doc_res6; replay ; QUIT; PROC DOCUMENT name=doc_res_f1; replay ; QUIT; ODS PDF CLOSE; Navigation contains one level with original TITLE bookmark labels Example 6 - create flat navigation PDF using multiple ODS DOCUMENT - no entry for some items \u00b6 comment: - Table 1 and Table 3 have no label and no bookmark entry, but are included in the PDF - a looping macro might be feasible for generic use - the SAS TOC is created and linking correctly include program to create one multiple ODS documents - one per report %INCLUDE \" &root /programs/example_ods_document_single_reports.sas\" ; flat ODS Document structure per document, some should not contain a label %smile_ods_document_flat_label (document=doc_res1, label =,bookmarklabel=no); %smile_ods_document_flat_label (document=doc_res2); %smile_ods_document_flat_label (document=doc_res3, label =,bookmarklabel=no); %smile_ods_document_flat_label (document=doc_res4); ODS Documents are flat now, some using no label Create final PDF file ODS PDF FILE = \" &root /results/ods_document_flat4.pdf\" CONTENTS ; PROC DOCUMENT name=doc_res1; replay ; QUIT; PROC DOCUMENT name=doc_res2; replay ; QUIT; PROC DOCUMENT name=doc_res3; replay ; QUIT; PROC DOCUMENT name=doc_res4; replay ; QUIT; ODS PDF CLOSE; Navigation and TOC for labeled entries, content of all is included in PDF Bookmarks and TOC Table 1 still in PDF Example 7 - create flat navigation PDF using multiple ODS DOCUMENTS with custom TOC \u00b6 comment: - Table 1 and Table 3 have no label and no bookmark entry, but are included in the PDF - a looping macro might be feasible for generic use - the SAS TOC is created and linking correctly create ODS Documents and flat them %INCLUDE \" &root /programs/example_ods_document_single_reports.sas\" ; %smile_ods_document_flat_label (document=doc_res1); %smile_ods_document_flat_label (document=doc_res2); %smile_ods_document_flat_label (document=doc_res3); %smile_ods_document_flat_label (document=doc_res4); store the final PDF document with REPLAY options ODS PDF FILE = \" &root /results/ods_document_flat5_custom_toc.pdf\" NOCONTENTS BOOKMARKGEN; include a custom TOC, but without an anchor PROC DOCUMENT name=doc_toc; replay ; QUIT; include tables with anchor ODS PDF ANCHOR = 'table1_x1' ; PROC DOCUMENT name=doc_res1; replay ; QUIT; ODS PDF ANCHOR = 'table2_x1' ; PROC DOCUMENT name=doc_res2; replay ; QUIT; ODS PDF ANCHOR = 'table3_x1' ; PROC DOCUMENT name=doc_res3; replay ; QUIT; ODS PDF ANCHOR = 'table4_x1' ; PROC DOCUMENT name=doc_res4; replay ; QUIT; ODS PDF CLOSE; Custom TOC and flat bookmarks are available Example 7 - create flat navigation PDF using multiple ODS DOCUMENTS - many outputs \u00b6 create 100 ODS Documents, flat them and create the output in PDF %INCLUDE \" &root /programs/example_ods_document_single_reports_big.sas\" ; %MACRO do_it(); %LOCAL i; %DO i = 1 %TO 100 ; %smile_ods_document_flat_label (document=doc_res &i ); %END ; ODS PDF FILE = \" &root /results/ods_document_flat6_big.pdf\" CONTENTS; %DO i = 1 %TO 100 ; PROC DOCUMENT name=doc_res &i ; replay ; QUIT; %END ; ODS PDF CLOSE; %MEND ; %do_it (); Flat bookmarks are available","title":"smile_ods_document_flat_label"},{"location":"test_smile_ods_document_flat_label/#test_smile_ods_document_flat_label","text":"Example program for macro calls of %smile_ods_document_flat_label Author : Katja Glass Creation : 2021-01-18 SAS Version: SAS 9.4 License : MIT initialize macros %LET root = /folders/myshortcuts/git/SMILE-SmartSASMacros; OPTIONS SASAUTOS=(SASAUTOS, \" &root /macros\" ); set options for nice layout OPTIONS NODATE NONUMBER NOCENTER ORIENTATION=landscape; TITLE ; FOOTNOTE ; OPTIONS PS= 35 ;","title":"TEST_SMILE_ODS_DOCUMENT_FLAT_LABEL"},{"location":"test_smile_ods_document_flat_label/#example-1-empty-ods-document-warning-expected","text":"ODS DOCUMENT NAME = work . doc_empty (write); ODS DOCUMENT CLOSE; %smile_ods_document_flat_label (document=doc_empty); %PUT The warning message is expected; Log Output: WARNING: SMILE_ODS_DOCUMENT_FLAT_LABEL - DOCUMENT (doc_empty) does not contain any observations - no action done The warning message is expected","title":"Example 1 - empty ODS Document - warning expected"},{"location":"test_smile_ods_document_flat_label/#example-2-not-existing-ods-document-error-expected","text":"%smile_ods_document_flat_label (document=doc_notexist); %PUT The error message is expected; Log Output: ERROR: SMILE_ODS_DOCUMENT_FLAT_LABEL - DOCUMENT (doc_notexist) is no existing ODS DOCUMENT. Macro will abort The error message is expected","title":"Example 2 - not existing ODS Document - error expected"},{"location":"test_smile_ods_document_flat_label/#example-3-create-flat-navigation-pdf-using-one-ods-document","text":"comment: - the SAS TOC would be created a buggy linking (e.g. click \"table 2\" on TOC) - this had been reported to SAS(R)- it seems to be depending on viewer and whether the PDF is maximized or not - I am expecting no fix from SAS(R) include program to create one ODS document containing many reports %INCLUDE \" &root /programs/example_ods_document_many_reports.sas\" ; create direct output without any modifications ODS PDF FILE = \" &root /results/ods_document_noflat1.pdf\" nocontents ; PROC DOCUMENT name=doc_results; replay ; QUIT; ODS PDF CLOSE; Navigation contains two levels, e.g. BYLINE categories update the document to flatten labels %smile_ods_document_flat_label (document=doc_results); ODS Document is arranged flat Create PDF out of modified ODS Document ODS PDF FILE = \" &root /results/ods_document_flat1.pdf\" nocontents ; PROC DOCUMENT name=doc_results; replay ; QUIT; ODS PDF CLOSE; Navigation contains one level The following source can be used to see the structure of the ODS DOCUMENT ODS LISTING ; PROC DOCUMENT NAME=doc_results(READ); LIST / levels=all details ; RUN; ODS _ALL_ CLOSE;","title":"Example 3 - create flat navigation PDF using one ODS DOCUMENT"},{"location":"test_smile_ods_document_flat_label/#example-4-create-flat-navigation-pdf-using-multiple-ods-document-with-re-labeling","text":"comment: - a looping macro might be feasible for generic use - the SAS TOC is created and linking correctly - ODS PROCLABEL is ignored as the label is coming through the re-labeling include program to create one multiple ODS documents - one per report %INCLUDE \" &root /programs/example_ods_document_single_reports.sas\" ; flat ODS Document structure per document, apply a specific label %smile_ods_document_flat_label (document=doc_res1, label = Table 1 ); %smile_ods_document_flat_label (document=doc_res2, label = Table 2 ); %smile_ods_document_flat_label (document=doc_res3, label = Table 3 ); %smile_ods_document_flat_label (document=doc_res4, label = Table 4 ); %smile_ods_document_flat_label (document=doc_res5, label = Table 5 ); %smile_ods_document_flat_label (document=doc_res6, label = Table 6 ); %smile_ods_document_flat_label (document=doc_res_f1, label =Figure 1 ); ODS Documents are flat now using a short label Create final PDF file ODS PDF FILE = \" &root /results/ods_document_flat2.pdf\" CONTENTS ; PROC DOCUMENT name=doc_res1; replay ; QUIT; PROC DOCUMENT name=doc_res2; replay ; QUIT; PROC DOCUMENT name=doc_res3; replay ; QUIT; PROC DOCUMENT name=doc_res4; replay ; QUIT; PROC DOCUMENT name=doc_res5; replay ; QUIT; PROC DOCUMENT name=doc_res6; replay ; QUIT; PROC DOCUMENT name=doc_res_f1; replay ; QUIT; ODS PDF CLOSE; Navigation and TOC contains one level with short bookmark labels, tables contain still full label Bookmarks and TOC First Table","title":"Example 4 - create flat navigation PDF using multiple ODS DOCUMENT - with re-labeling"},{"location":"test_smile_ods_document_flat_label/#example-5-create-flat-navigation-pdf-using-multiple-ods-document","text":"comment: - a looping macro might be feasible for generic use - the SAS TOC is created and linking correctly include program to create one multiple ODS documents - one per report %INCLUDE \" &root /programs/example_ods_document_single_reports.sas\" ; flat ODS Document structure per document, apply a specific label %smile_ods_document_flat_label (document=doc_res1); %smile_ods_document_flat_label (document=doc_res2); %smile_ods_document_flat_label (document=doc_res3); %smile_ods_document_flat_label (document=doc_res4); %smile_ods_document_flat_label (document=doc_res5); %smile_ods_document_flat_label (document=doc_res6); %smile_ods_document_flat_label (document=doc_res_f1); ODS Documents are flat now using the original TITLE label Create final PDF file ODS PDF FILE = \" &root /results/ods_document_flat3.pdf\" CONTENTS ; PROC DOCUMENT name=doc_res1; replay ; QUIT; PROC DOCUMENT name=doc_res2; replay ; QUIT; PROC DOCUMENT name=doc_res3; replay ; QUIT; PROC DOCUMENT name=doc_res4; replay ; QUIT; PROC DOCUMENT name=doc_res5; replay ; QUIT; PROC DOCUMENT name=doc_res6; replay ; QUIT; PROC DOCUMENT name=doc_res_f1; replay ; QUIT; ODS PDF CLOSE; Navigation contains one level with original TITLE bookmark labels","title":"Example 5 - create flat navigation PDF using multiple ODS DOCUMENT"},{"location":"test_smile_ods_document_flat_label/#example-6-create-flat-navigation-pdf-using-multiple-ods-document-no-entry-for-some-items","text":"comment: - Table 1 and Table 3 have no label and no bookmark entry, but are included in the PDF - a looping macro might be feasible for generic use - the SAS TOC is created and linking correctly include program to create one multiple ODS documents - one per report %INCLUDE \" &root /programs/example_ods_document_single_reports.sas\" ; flat ODS Document structure per document, some should not contain a label %smile_ods_document_flat_label (document=doc_res1, label =,bookmarklabel=no); %smile_ods_document_flat_label (document=doc_res2); %smile_ods_document_flat_label (document=doc_res3, label =,bookmarklabel=no); %smile_ods_document_flat_label (document=doc_res4); ODS Documents are flat now, some using no label Create final PDF file ODS PDF FILE = \" &root /results/ods_document_flat4.pdf\" CONTENTS ; PROC DOCUMENT name=doc_res1; replay ; QUIT; PROC DOCUMENT name=doc_res2; replay ; QUIT; PROC DOCUMENT name=doc_res3; replay ; QUIT; PROC DOCUMENT name=doc_res4; replay ; QUIT; ODS PDF CLOSE; Navigation and TOC for labeled entries, content of all is included in PDF Bookmarks and TOC Table 1 still in PDF","title":"Example 6 - create flat navigation PDF using multiple ODS DOCUMENT - no entry for some items"},{"location":"test_smile_ods_document_flat_label/#example-7-create-flat-navigation-pdf-using-multiple-ods-documents-with-custom-toc","text":"comment: - Table 1 and Table 3 have no label and no bookmark entry, but are included in the PDF - a looping macro might be feasible for generic use - the SAS TOC is created and linking correctly create ODS Documents and flat them %INCLUDE \" &root /programs/example_ods_document_single_reports.sas\" ; %smile_ods_document_flat_label (document=doc_res1); %smile_ods_document_flat_label (document=doc_res2); %smile_ods_document_flat_label (document=doc_res3); %smile_ods_document_flat_label (document=doc_res4); store the final PDF document with REPLAY options ODS PDF FILE = \" &root /results/ods_document_flat5_custom_toc.pdf\" NOCONTENTS BOOKMARKGEN; include a custom TOC, but without an anchor PROC DOCUMENT name=doc_toc; replay ; QUIT; include tables with anchor ODS PDF ANCHOR = 'table1_x1' ; PROC DOCUMENT name=doc_res1; replay ; QUIT; ODS PDF ANCHOR = 'table2_x1' ; PROC DOCUMENT name=doc_res2; replay ; QUIT; ODS PDF ANCHOR = 'table3_x1' ; PROC DOCUMENT name=doc_res3; replay ; QUIT; ODS PDF ANCHOR = 'table4_x1' ; PROC DOCUMENT name=doc_res4; replay ; QUIT; ODS PDF CLOSE; Custom TOC and flat bookmarks are available","title":"Example 7 - create flat navigation PDF using multiple ODS DOCUMENTS with custom TOC"},{"location":"test_smile_ods_document_flat_label/#example-7-create-flat-navigation-pdf-using-multiple-ods-documents-many-outputs","text":"create 100 ODS Documents, flat them and create the output in PDF %INCLUDE \" &root /programs/example_ods_document_single_reports_big.sas\" ; %MACRO do_it(); %LOCAL i; %DO i = 1 %TO 100 ; %smile_ods_document_flat_label (document=doc_res &i ); %END ; ODS PDF FILE = \" &root /results/ods_document_flat6_big.pdf\" CONTENTS; %DO i = 1 %TO 100 ; PROC DOCUMENT name=doc_res &i ; replay ; QUIT; %END ; ODS PDF CLOSE; %MEND ; %do_it (); Flat bookmarks are available","title":"Example 7 - create flat navigation PDF using multiple ODS DOCUMENTS - many outputs"}]}